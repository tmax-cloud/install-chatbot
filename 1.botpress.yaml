apiVersion: v1
kind: Namespace
metadata:
  name: chatbot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot
  namespace: chatbot
  labels:
    app: chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatbot
  template:
    metadata:
      labels:
        app: chatbot
    spec:
      containers:
        - image: docker.io/tmaxcloudck/chatbot:b0.0.10
          name: botpress-prod
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            name: http 
          resources:
            limits:
              cpu: 1000m
              memory: 2000Mi
            requests:
              cpu: 1000m
              memory: 2000Mi
          readinessProbe:
            httpGet:
              path: /
              port: 3000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: chatbot
  annotations:
    traefik.ingress.kubernetes.io/service.serverstransport: tmaxcloud@file
  name: chatbot
  namespace: chatbot
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: chatbot
  sessionAffinity: None
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    ingress.tmaxcloud.org/name: chatbot
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  name: chatbot-ingress
  namespace: chatbot
spec:
  ingressClassName: tmax-cloud
  rules:
  - host: chatbot.{CUSTOM_DOMAIN_NAME}
    http:
      paths:
      - backend:
          service:
            name: chatbot
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - chatbot.{CUSTOM_DOMAIN_NAME}   
